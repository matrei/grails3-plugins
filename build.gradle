buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:$assetPipelineVersion"
        classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:2.2.0"
    }
}


version file('version.txt').text.trim()
group "grailspackage"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin: "com.bertramlabs.asset-pipeline"
apply plugin: "com.gorylenko.gradle-git-properties"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url 'https://dl.bintray.com/sdelamo/plugins' }
    maven { url 'https://dl.bintray.com/grails/plugins' }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}
dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")

    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:gsp"
    compile "io.micronaut:micronaut-http-client"

    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "javax.xml.bind:jaxb-api:2.3.0"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.mockito:mockito-core"
    testCompile "org.grails:grails-web-testing-support"


    compile 'org.twitter4j:twitter4j-core:4.0.7'
    compile "com.vladsch.flexmark:flexmark-all:$flexmarkVersion"
    compile "org.asciidoctor:asciidoctorj:$asciidoctorjVersion"
}

apply from: "${rootProject.projectDir}/gradle/xrebel.gradle"

bootRun {
    systemProperties System.properties
    jvmArgs(
            '-Dspring.output.ansi.enabled=always',
            '-noverify',
            '-XX:TieredStopAtLevel=1',
            '-Xmx1024m')
    sourceResources sourceSets.main
}

assets {
    packagePlugin = true
    includes = ["fonts/*"]
    minifyJs = true
    minifyCss = true
}

task stage() {
    dependsOn assemble
}

test {
    systemProperties System.properties
}
grails { pathingJar = true }
